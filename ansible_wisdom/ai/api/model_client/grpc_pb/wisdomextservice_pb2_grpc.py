# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import ansiblerequest_pb2 as ansiblerequest__pb2
from . import generatedresult_pb2 as generatedresult__pb2


class WisdomExtServiceStub:
    """-- SERVICES ----------------------------------------------------------------"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AnsiblePredict = channel.unary_unary(
            '/caikit.runtime.WisdomExt.WisdomExtService/AnsiblePredict',
            request_serializer=ansiblerequest__pb2.AnsibleRequest.SerializeToString,
            response_deserializer=generatedresult__pb2.GeneratedResult.FromString,
        )


class WisdomExtServiceServicer:
    """-- SERVICES ----------------------------------------------------------------"""

    def AnsiblePredict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WisdomExtServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'AnsiblePredict': grpc.unary_unary_rpc_method_handler(
            servicer.AnsiblePredict,
            request_deserializer=ansiblerequest__pb2.AnsibleRequest.FromString,
            response_serializer=generatedresult__pb2.GeneratedResult.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'caikit.runtime.WisdomExt.WisdomExtService', rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class WisdomExtService:
    """-- SERVICES ----------------------------------------------------------------"""

    @staticmethod
    def AnsiblePredict(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/caikit.runtime.WisdomExt.WisdomExtService/AnsiblePredict',
            ansiblerequest__pb2.AnsibleRequest.SerializeToString,
            generatedresult__pb2.GeneratedResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
