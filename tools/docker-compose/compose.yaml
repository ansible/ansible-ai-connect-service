version: "3.8"
services:
  django: &django
    user: "1000"
    build:
      context: $PWD
      dockerfile: wisdom-service.Containerfile
    depends_on:
      - redis
      - db
    volumes:
      - $PWD/ansible_wisdom:/var/www/ansible_wisdom
      - $PWD/ari/kb:/etc/ari/kb
    ports:
      - "8000:8000"
    expose:
      - "8000"
      - "8001-8011" # django-prometheus
    environment:
      - DJANGO_SETTINGS_MODULE=main.settings.development
      - ANSIBLE_AI_DATABASE_NAME=wisdom
      - ANSIBLE_AI_DATABASE_USER=wisdom
      - ANSIBLE_AI_DATABASE_PASSWORD=wisdom
      - ANSIBLE_AI_DATABASE_HOST=db
      - ANSIBLE_HOME=/etc/ansible
      - ENABLE_ARI_POSTPROCESS=${ENABLE_ARI_POSTPROCESS}
      - ARI_KB_PATH=/etc/ari/kb
      - DEBUG_VALUE=${DEBUG_VALUE}
      - SOCIAL_AUTH_GITHUB_TEAM_KEY=${SOCIAL_AUTH_GITHUB_TEAM_KEY}
      - SOCIAL_AUTH_GITHUB_TEAM_SECRET=${SOCIAL_AUTH_GITHUB_TEAM_SECRET}
      - SECRET_KEY=${SECRET_KEY:-somesecret}
      - SEGMENT_WRITE_KEY=${SEGMENT_WRITE_KEY}
      - HUGGINGFACE_HUB_CACHE=/var/www/model-cache
      - SENTENCE_TRANSFORMERS_HOME=/var/www/model-cache
      - ANSIBLE_AI_SEARCH_HOST=${ANSIBLE_AI_SEARCH_HOST}
      - ANSIBLE_AI_SEARCH_PORT=${ANSIBLE_AI_SEARCH_PORT}
      - ANSIBLE_AI_SEARCH_KEY=${ANSIBLE_AI_SEARCH_KEY}
      - ANSIBLE_AI_SEARCH_SECRET=${ANSIBLE_AI_SEARCH_SECRET}
      - ANSIBLE_AI_SEARCH_REGION=${ANSIBLE_AI_SEARCH_REGION}
      - ANSIBLE_AI_MODEL_MESH_HOST=${ANSIBLE_AI_MODEL_MESH_HOST}
      - ANSIBLE_AI_MODEL_MESH_INFERENCE_PORT=${ANSIBLE_AI_MODEL_MESH_INFERENCE_PORT}
      - ANSIBLE_AI_MODEL_MESH_API_TYPE=${ANSIBLE_AI_MODEL_MESH_API_TYPE}
      - ANSIBLE_AI_MODEL_NAME=${ANSIBLE_AI_MODEL_NAME:-wisdom}
      - COMPLETION_USER_RATE_THROTTLE=${COMPLETION_USER_RATE_THROTTLE}
    command:
      - /usr/bin/launch-wisdom.sh
    networks:
      - dbnet
  redis:
    image: docker.io/library/redis:alpine
    networks:
      - dbnet
    ports:
      - "6379:6379"
  db:
    image: docker.io/library/postgres:alpine
    environment:
      - POSTGRES_PASSWORD=wisdom
      - POSTGRES_DB=wisdom
      - POSTGRES_USER=wisdom
    networks:
      - dbnet
# Disabled because this doesn't work properly on MacOS.
# [33] CONTEXT:  writing block 0 of relation base/16384/2658
# 2023-01-17 21:46:56.579 UTC [33] LOG:  out of file descriptors: No file descriptors available; release and retry
#    volumes:
#      - $PWD/db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  prometheus:
    image: docker.io/prom/prometheus
    command:
      - --config.file=/opt/prometheus/prometheus.yaml
      - --web.enable-lifecycle
    volumes:
      - $PWD/prometheus/:/opt/prometheus/
    ports:
      - "9090:9090"
    networks:
      - dbnet
  grafana:
    image: docker.io/grafana/grafana:7.5.17
    environment:
      - GF_LOG_LEVEL=warn
    ports:
      - "3000:3000"
    volumes:
      - $PWD/grafana:/var/lib/grafana
    networks:
      - dbnet

networks:
  dbnet:
