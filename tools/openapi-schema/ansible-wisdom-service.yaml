openapi: 3.0.3
info:
  title: Ansible Lightspeed with IBM watsonx Code Assistant.
  version: 0.0.7
  description: Equip the automation developer at Lightspeed.
paths:
  /api/v0/ai/attributions/:
    post:
      operationId: ai_attributions_create
      description: Returns attributions that were the highest likelihood sources for
        a given code suggestion.
      summary: Code suggestion attributions
      tags:
      - ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttributionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttributionRequest'
        required: true
      security:
      - oauth2:
        - read
        - write
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributionResponse'
          description: ''
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '429':
          description: Request was throttled
        '503':
          description: Service Unavailable
  /api/v0/ai/completions/:
    post:
      operationId: ai_completions_create
      description: Returns inline code suggestions based on a given Ansible editor
        context.
      summary: Inline code suggestions
      tags:
      - ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletionRequest'
            examples:
              ValidExample:
                value:
                  prompt: |
                    ---
                    - hosts: all
                      become: yes

                      tasks:
                      - name: Install ssh
                summary: Request Sample
                description: A valid sample request.
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompletionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompletionRequest'
        required: true
      security:
      - oauth2:
        - read
        - write
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletionResponse'
              examples:
                ValidExample:
                  value:
                    predictions:
                    - |2-
                          ansible.builtin.package:
                            name: openssh-server
                            state: present
                  summary: Response sample
                  description: A valid sample response.
          description: ''
        '204':
          description: Empty response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '429':
          description: Request was throttled
        '503':
          description: Service Unavailable
  /api/v0/ai/contentmatches/:
    post:
      operationId: ai_contentmatches_create
      description: Returns content matches that were the highest likelihood sources
        for a given code suggestion.
      summary: Code suggestion attributions
      tags:
      - ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentMatchRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContentMatchRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContentMatchRequest'
        required: true
      security:
      - oauth2:
        - read
        - write
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentMatchResponse'
          description: ''
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '429':
          description: Request was throttled
        '503':
          description: Service Unavailable
  /api/v0/ai/feedback/:
    post:
      operationId: ai_feedback_create
      description: Feedback API for the AI service
      summary: Feedback API for the AI service
      tags:
      - ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackRequest'
            examples:
              ValidInlineSuggestionFeedbackExample:
                value:
                  inlineSuggestion:
                    latency: 1000
                    userActionTime: 5155
                    action: '0'
                    suggestionId: a1b2c3d4-e5f6-a7b8-c9d0-e1f2a3b4c5d6
                summary: Feedback Request sample for inline suggestion to identify
                  if the suggestion is accepted or ignored.
                description: A valid inline suggestion feedback sample request to
                  get details about the suggestion like latency time, user decision
                  time, user action and suggestion id.
              ValidAnsibleContentFeedbackExample:
                value:
                  ansibleContent:
                    content: |
                      ---
                      - hosts: all
                        become: yes

                        tasks:
                        - name: Install ssh
                    documentUri: file:///home/user/ansible/test.yaml
                    trigger: '0'
                summary: Feedback Request sample for Ansible content upload
                description: A valid sample request to get ansible content as feedback.
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedbackRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedbackRequest'
      security:
      - oauth2:
        - read
        - write
      - cookieAuth: []
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  /api/v0/me/:
    get:
      operationId: me_retrieve
      tags:
      - me
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v0/wca/apikey/:
    get:
      operationId: wca_api_key_get
      summary: Get WCA key for an Organisation
      tags:
      - wca
      security:
      - oauth2:
        - read
        - write
      - cookieAuth: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Request was throttled
        '500':
          description: Internal service error
    post:
      operationId: wca_api_key_set
      summary: Set the WCA key for an Organisation
      tags:
      - wca
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WcaKeyRequest'
            examples:
              ValidExample:
                value:
                  key: '1234567890'
                summary: Request Sample
                description: A valid WCA Key request.
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WcaKeyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WcaKeyRequest'
        required: true
      security:
      - oauth2:
        - read
        - write
      - cookieAuth: []
      responses:
        '204':
          description: Empty response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Request was throttled
        '500':
          description: Internal service error
  /api/v0/wca/apikey/test/:
    get:
      operationId: wca_api_key_validator_get
      summary: Validate WCA key for an Organisation
      tags:
      - wca
      security:
      - oauth2:
        - read
      - cookieAuth: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Request was throttled
        '500':
          description: Internal service error
  /api/v0/wca/modelid/:
    get:
      operationId: wca_model_id_get
      summary: Get WCA Model Id for an Organisation
      tags:
      - wca
      security:
      - oauth2:
        - read
        - write
      - cookieAuth: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Request was throttled
        '500':
          description: Internal service error
    post:
      operationId: wca_model_id_set
      summary: Set the Model Id to be used for an Organisation
      tags:
      - wca
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WcaModelIdRequest'
            examples:
              ValidExample:
                value:
                  model_id: '1234567890'
                summary: Request Sample
                description: A valid WCA Model Id request.
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WcaModelIdRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WcaModelIdRequest'
        required: true
      security:
      - oauth2:
        - read
        - write
      - cookieAuth: []
      responses:
        '204':
          description: Empty response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Request was throttled
        '500':
          description: Internal service error
  /api/v0/wca/modelid/test/:
    get:
      operationId: wca_model_id_validator_get
      summary: Validate WCA Model Id for an Organisation
      tags:
      - wca
      security:
      - oauth2:
        - read
      - cookieAuth: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Request was throttled
        '500':
          description: Internal service error
  /check/:
    get:
      operationId: check_retrieve
      description: Lightspeed Service Liveness Probe View
      summary: Liveness probe
      tags:
      - check
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: OK
  /check/status/:
    get:
      operationId: check_status_retrieve
      description: Lightspeed Service Health Check
      summary: Health check with backend server status
      tags:
      - check
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                ExampleOutput:
                  value:
                    status: ok
                    timestamp: '2023-03-13T17:25:17.240683'
                    version: latest 0.1.202303131417
                    git_commit: b987bc43b90f8aca2deaf3bda85596f4b95a10a0
                    model_name: ansible-wisdom-v09
                    deployed_region: dev
                    dependencies:
                    - name: db
                      status: ok
                      time_taken: 233.538
                    - name: model-server
                      status: ok
                      time_taken: 0.001
                  summary: Example output
          description: ''
        '500':
          description: One or more backend services are unavailable.
components:
  schemas:
    ActionEnum:
      enum:
      - '0'
      - '1'
      type: string
    AnsibleContentFeedback:
      type: object
      properties:
        content:
          type: string
          title: Ansible Content
          description: Ansible file content.
        documentUri:
          type: string
        trigger:
          $ref: '#/components/schemas/TriggerEnum'
        activityId:
          type: string
          format: uuid
          title: Activity ID
          description: A UUID that identifies a user activity session to the document
            uploaded.
      required:
      - content
      - documentUri
      - trigger
    Attribution:
      type: object
      properties:
        repo_name:
          type: string
        repo_url:
          type: string
          format: uri
        path:
          type: string
        license:
          type: string
        data_source:
          type: string
        ansible_type:
          type: string
        score:
          type: number
          format: double
      required:
      - ansible_type
      - data_source
      - license
      - path
      - repo_name
      - repo_url
      - score
    AttributionRequest:
      type: object
      properties:
        suggestion:
          type: string
        suggestionId:
          type: string
          format: uuid
          title: Suggestion ID
          description: A UUID that identifies the particular suggestion attribution
            data is being requested for.
      required:
      - suggestion
    AttributionResponse:
      type: object
      properties:
        attributions:
          type: array
          items:
            $ref: '#/components/schemas/Attribution'
      required:
      - attributions
    CompletionRequest:
      type: object
      properties:
        prompt:
          type: string
          description: Editor prompt.
        suggestionId:
          type: string
          format: uuid
          title: Suggestion ID
          description: A UUID that identifies a suggestion.
        metadata:
          $ref: '#/components/schemas/Metadata'
        model:
          type: string
      required:
      - prompt
    CompletionResponse:
      type: object
      properties:
        model:
          type: string
        suggestionId:
          type: string
          format: uuid
        predictions:
          type: array
          items:
            type: string
      required:
      - predictions
    ContentMatch:
      type: object
      properties:
        repo_name:
          type: string
        repo_url:
          type: string
          format: uri
        path:
          type: string
        license:
          type: string
        data_source_description:
          type: string
        score:
          type: number
          format: double
      required:
      - data_source_description
      - license
      - path
      - repo_name
      - repo_url
      - score
    ContentMatchList:
      type: object
      properties:
        contentmatch:
          type: array
          items:
            $ref: '#/components/schemas/ContentMatch'
      required:
      - contentmatch
    ContentMatchRequest:
      type: object
      properties:
        suggestions:
          type: array
          items:
            type: string
        suggestionId:
          type: string
          format: uuid
          title: Suggestion ID
          description: A UUID that identifies the particular suggestion attribution
            data is being requested for.
        model:
          type: string
      required:
      - suggestions
    ContentMatchResponse:
      type: object
      properties:
        contentmatches:
          type: array
          items:
            $ref: '#/components/schemas/ContentMatchList'
      required:
      - contentmatches
    FeedbackRequest:
      type: object
      properties:
        inlineSuggestion:
          $ref: '#/components/schemas/InlineSuggestionFeedback'
        ansibleContent:
          $ref: '#/components/schemas/AnsibleContentFeedback'
        suggestionQualityFeedback:
          $ref: '#/components/schemas/SuggestionQualityFeedback'
        sentimentFeedback:
          $ref: '#/components/schemas/SentimentFeedback'
        issueFeedback:
          $ref: '#/components/schemas/IssueFeedback'
    InlineSuggestionFeedback:
      type: object
      properties:
        latency:
          type: number
          format: double
        userActionTime:
          type: number
          format: double
        documentUri:
          type: string
        action:
          $ref: '#/components/schemas/ActionEnum'
        error:
          type: string
        suggestionId:
          type: string
          format: uuid
          title: Suggestion ID
          description: A UUID that identifies a suggestion.
        activityId:
          type: string
          format: uuid
          title: Activity ID
          description: A UUID that identifies a user activity session to the document
            uploaded.
      required:
      - action
      - suggestionId
    IssueFeedback:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeEnum'
        title:
          type: string
          title: Issue title
          description: The title of the issue.
        description:
          type: string
          title: Issue description
          description: The description of the issue.
      required:
      - description
      - title
      - type
    Metadata:
      type: object
      properties:
        documentUri:
          type: string
        activityId:
          type: string
          format: uuid
          title: Activity ID
          description: A UUID that identifies a user activity session within a given
            document.
    SentimentFeedback:
      type: object
      properties:
        value:
          type: integer
          maximum: 5
          minimum: 1
        feedback:
          type: string
          title: Free form text feedback
          description: Free form text feedback describing the reason for sentiment
            value.
      required:
      - feedback
      - value
    SuggestionQualityFeedback:
      type: object
      properties:
        prompt:
          type: string
          title: File Content used as context
          description: File Content till end of task name description before cursor
            position.
        providedSuggestion:
          type: string
          title: Provided Model suggestion
          description: Inline suggestion from model as shared by user for given prompt.
        expectedSuggestion:
          type: string
          title: Expected Model suggestion
          description: Suggestion expected by the user.
        additionalComment:
          type: string
          title: Additional Comment
          description: Additional comment describing why the                    change
            was required in Lightspeed suggestion.
      required:
      - expectedSuggestion
      - prompt
      - providedSuggestion
    TriggerEnum:
      enum:
      - '0'
      - '1'
      - '2'
      type: string
    TypeEnum:
      enum:
      - bug-report
      - feature-request
      type: string
    User:
      type: object
      properties:
        rh_org_has_subscription:
          type: boolean
          readOnly: true
        rh_user_has_seat:
          type: boolean
          readOnly: true
        rh_user_is_org_admin:
          type: boolean
        external_username:
          type: string
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - external_username
      - rh_org_has_subscription
      - rh_user_has_seat
      - username
    WcaKeyRequest:
      type: object
      properties:
        key:
          type: string
          description: WCA API Key.
      required:
      - key
    WcaModelIdRequest:
      type: object
      properties:
        model_id:
          type: string
          description: WCA Model Id.
      required:
      - model_id
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    oauth2:
      type: oauth2
      flows: {}
tags:
- name: ai
  description: AI-related operations
- name: me
  description: Authenticated user information
- name: check
  description: Health check
