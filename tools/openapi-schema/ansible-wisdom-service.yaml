openapi: 3.0.3
info:
  title: Ansible Wisdom Service
  version: 0.0.3
  description: Equip the automation developer with Wisdom super powers.
paths:
  /api/ai/completions/:
    post:
      operationId: ai_completions_create
      description: Returns inline code suggestions based on a given Ansible editor
        context.
      summary: Inline code suggestions
      tags:
      - ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletionRequest'
            examples:
              ValidExample:
                value:
                  prompt: |
                    ---
                    - hosts: all
                      become: yes

                      tasks:
                      - name: Install ssh
                summary: Request Sample
                description: A valid sample request.
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompletionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompletionRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletionResponse'
              examples:
                ValidExample:
                  value:
                    predictions:
                    - |2-
                          ansible.builtin.package:
                            name: openssh-server
                            state: present
                  summary: Response sample
                  description: A valid sample response.
          description: ''
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '429':
          description: Request was throttled
  /api/me/:
    get:
      operationId: me_retrieve
      tags:
      - me
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    CompletionRequest:
      type: object
      properties:
        prompt:
          type: string
          description: Editor prompt.
        userId:
          type: string
          format: uuid
          title: User ID
          description: A UUID that identifies a user.
        suggestionId:
          type: string
          format: uuid
          title: Suggestion ID
          description: A UUID that identifies a suggestion.
      required:
      - prompt
    CompletionResponse:
      type: object
      properties:
        predictions:
          type: array
          items:
            type: string
      required:
      - predictions
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - username
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: http
      scheme: bearer
tags:
- name: ai
  description: AI-related operations
- name: me
  description: Authenticated user information
