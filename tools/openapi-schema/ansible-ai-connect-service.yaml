openapi: 3.0.3
info:
  title: Ansible AI Connect.
  version: 0.0.9
  description: Equip the automation developer at Lightspeed.
paths:
  /api/v0/ai/completions/:
    post:
      operationId: ai_completions_create
      description: Returns inline code suggestions based on a given Ansible editor
        context.
      summary: Inline code suggestions
      tags:
      - ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletionRequest'
            examples:
              ValidExample:
                value:
                  prompt: |
                    ---
                    - hosts: all
                      become: yes

                      tasks:
                      - name: Install ssh
                summary: Request Sample
                description: A valid sample request.
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompletionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompletionRequest'
        required: true
      security:
      - oauth2:
        - read
        - write
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletionResponse'
              examples:
                ValidExample:
                  value:
                    predictions:
                    - |2-
                          ansible.builtin.package:
                            name: openssh-server
                            state: present
                  summary: Response sample
                  description: A valid sample response.
          description: ''
        '204':
          description: Empty response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '429':
          description: Request was throttled
        '503':
          description: Service Unavailable
  /api/v0/ai/contentmatches/:
    post:
      operationId: ai_contentmatches_create
      description: Returns content matches that were the highest likelihood sources
        for a given code suggestion.
      summary: Code suggestion attributions
      tags:
      - ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentMatchRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContentMatchRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContentMatchRequest'
        required: true
      security:
      - oauth2:
        - read
        - write
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentMatchResponse'
          description: ''
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '429':
          description: Request was throttled
        '503':
          description: Service Unavailable
  /api/v0/ai/explanations/:
    post:
      operationId: ai_explanations_create
      description: Returns a text that explains a playbook.
      summary: Inline code suggestions
      tags:
      - ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExplanationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExplanationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExplanationRequest'
        required: true
      security:
      - oauth2:
        - read
        - write
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplanationResponse'
          description: ''
        '204':
          description: Empty response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '429':
          description: Request was throttled
        '503':
          description: Service Unavailable
  /api/v0/ai/feedback/:
    post:
      operationId: ai_feedback_create
      description: Feedback API for the AI service
      summary: Feedback API for the AI service
      tags:
      - ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackRequest'
            examples:
              ValidInlineSuggestionFeedbackExample:
                value:
                  inlineSuggestion:
                    userActionTime: 5155
                    action: '0'
                    suggestionId: a1b2c3d4-e5f6-a7b8-c9d0-e1f2a3b4c5d6
                summary: Feedback Request sample for inline suggestion to identify
                  if the suggestion is accepted or ignored.
                description: A valid inline suggestion feedback sample request to
                  get details about the suggestion like user decision time, user action
                  and suggestion id.
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedbackRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedbackRequest'
      security:
      - oauth2:
        - read
        - write
      - cookieAuth: []
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  /api/v0/ai/generations/:
    post:
      operationId: ai_generations_create
      description: Returns a playbook based on a text input.
      summary: Inline code suggestions
      tags:
      - ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenerationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenerationRequest'
        required: true
      security:
      - oauth2:
        - read
        - write
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationResponse'
          description: ''
        '204':
          description: Empty response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '429':
          description: Request was throttled
        '503':
          description: Service Unavailable
  /api/v0/me/:
    get:
      operationId: me_retrieve
      tags:
      - me
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: ''
  /api/v0/me/summary/:
    get:
      operationId: me_summary_retrieve
      tags:
      - me
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkdownUserResponse'
          description: ''
  /api/v0/telemetry/:
    get:
      operationId: telemetry_settings_get
      summary: Get the telemetry settings for an Organisation
      tags:
      - telemetry
      security:
      - oauth2:
        - read
        - write
      - cookieAuth: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Request was throttled
        '500':
          description: Internal service error
    post:
      operationId: telemetry_settings_set
      summary: Set the Telemetry settings for an Organisation
      tags:
      - telemetry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TelemetrySettingsRequest'
            examples:
              ValidExample:
                value:
                  optOut: 'true'
                summary: Request Telemetry settings
                description: A valid request to set the Telemetry settings.
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TelemetrySettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TelemetrySettingsRequest'
        required: true
      security:
      - oauth2:
        - read
        - write
      - cookieAuth: []
      responses:
        '204':
          description: Empty response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Request was throttled
        '500':
          description: Internal service error
  /api/v0/wca/apikey/:
    get:
      operationId: wca_api_key_get
      summary: Get WCA key for an Organisation
      tags:
      - wca
      security:
      - oauth2:
        - read
        - write
      - cookieAuth: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Request was throttled
        '500':
          description: Internal service error
    post:
      operationId: wca_api_key_set
      summary: Set the WCA key for an Organisation
      tags:
      - wca
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WcaKeyRequest'
            examples:
              ValidExample:
                value:
                  key: '1234567890'
                summary: Request Sample
                description: A valid WCA Key request.
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WcaKeyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WcaKeyRequest'
        required: true
      security:
      - oauth2:
        - read
        - write
      - cookieAuth: []
      responses:
        '204':
          description: Empty response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Request was throttled
        '500':
          description: Internal service error
  /api/v0/wca/apikey/test/:
    get:
      operationId: wca_api_key_validator_get
      summary: Validate WCA key for an Organisation
      tags:
      - wca
      security:
      - oauth2:
        - read
      - cookieAuth: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Request was throttled
        '500':
          description: Internal service error
  /api/v0/wca/modelid/:
    get:
      operationId: wca_model_id_get
      summary: Get WCA Model Id for an Organisation
      tags:
      - wca
      security:
      - oauth2:
        - read
        - write
      - cookieAuth: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Request was throttled
        '500':
          description: Internal service error
    post:
      operationId: wca_model_id_set
      summary: Set the Model Id to be used for an Organisation
      tags:
      - wca
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WcaModelIdRequest'
            examples:
              ValidExample:
                value:
                  model_id: '1234567890'
                summary: Request Sample
                description: A valid WCA Model Id request.
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WcaModelIdRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WcaModelIdRequest'
        required: true
      security:
      - oauth2:
        - read
        - write
      - cookieAuth: []
      responses:
        '204':
          description: Empty response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Request was throttled
        '500':
          description: Internal service error
  /api/v0/wca/modelid/test/:
    get:
      operationId: wca_model_id_validator_get
      summary: Validate WCA Model Id for an Organisation
      tags:
      - wca
      security:
      - oauth2:
        - read
      - cookieAuth: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Request was throttled
        '500':
          description: Internal service error
  /check/:
    get:
      operationId: check_retrieve
      description: Service Liveness Probe View
      summary: Liveness probe
      tags:
      - check
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: OK
  /check/status/:
    get:
      operationId: check_status_retrieve
      description: Service Health Check
      summary: Health check with backend server status
      tags:
      - check
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                ExampleOutput:
                  value:
                    status: ok
                    timestamp: '2023-03-13T17:25:17.240683'
                    version: latest 0.1.202303131417
                    git_commit: b987bc43b90f8aca2deaf3bda85596f4b95a10a0
                    deployed_region: dev
                    dependencies:
                    - name: db
                      status: ok
                      time_taken: 233.538
                    - name: model-server
                      status: ok
                      time_taken: 0.001
                  summary: Example output
          description: ''
        '500':
          description: One or more backend services are unavailable.
components:
  schemas:
    Action4c6Enum:
      enum:
      - '0'
      - '1'
      - '2'
      type: string
      description: |-
        * `0` - ACCEPTED
        * `1` - REJECTED
        * `2` - IGNORED
    CompletionMetadata:
      type: object
      properties:
        ansibleExtensionVersion:
          type: string
          title: Ansible vscode/vscodium extension version
          description: User's installed Ansible extension version, in format vMAJOR.MINOR.PATCH
          pattern: v?\d+\.\d+\.\d+
        documentUri:
          type: string
        activityId:
          type: string
          format: uuid
          title: Activity ID
          description: A UUID that identifies a user activity session within a given
            document.
        ansibleFileType:
          type: string
          title: Ansible File Type
          description: Ansible file type (playbook/tasks_in_role/tasks)
        additionalContext:
          type: object
          additionalProperties: {}
          title: Additional Context
          description: Additional context for completion API
    CompletionRequest:
      type: object
      properties:
        ansibleExtensionVersion:
          type: string
          title: Ansible vscode/vscodium extension version
          description: User's installed Ansible extension version, in format vMAJOR.MINOR.PATCH
          pattern: v?\d+\.\d+\.\d+
        prompt:
          type: string
          description: Editor prompt.
        suggestionId:
          type: string
          format: uuid
          title: Suggestion ID
          description: A UUID that identifies a suggestion.
        metadata:
          $ref: '#/components/schemas/CompletionMetadata'
        model:
          type: string
      required:
      - prompt
    CompletionResponse:
      type: object
      properties:
        model:
          type: string
        suggestionId:
          type: string
          format: uuid
        predictions:
          type: array
          items:
            type: string
      required:
      - predictions
    ContentMatch:
      type: object
      properties:
        repo_name:
          type: string
        repo_url:
          type: string
          format: uri
        path:
          type: string
        license:
          type: string
        data_source_description:
          type: string
        score:
          type: number
          format: double
      required:
      - data_source_description
      - license
      - path
      - repo_name
      - repo_url
      - score
    ContentMatchList:
      type: object
      properties:
        contentmatch:
          type: array
          items:
            $ref: '#/components/schemas/ContentMatch'
      required:
      - contentmatch
    ContentMatchRequest:
      type: object
      properties:
        ansibleExtensionVersion:
          type: string
          title: Ansible vscode/vscodium extension version
          description: User's installed Ansible extension version, in format vMAJOR.MINOR.PATCH
          pattern: v?\d+\.\d+\.\d+
        suggestions:
          type: array
          items:
            type: string
        suggestionId:
          type: string
          format: uuid
          title: Suggestion ID
          description: A UUID that identifies the particular suggestion content match
            data is being requested for.
        model:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
      required:
      - suggestions
    ContentMatchResponse:
      type: object
      properties:
        contentmatches:
          type: array
          items:
            $ref: '#/components/schemas/ContentMatchList'
      required:
      - contentmatches
    ExplanationRequest:
      type: object
      properties:
        ansibleExtensionVersion:
          type: string
          title: Ansible vscode/vscodium extension version
          description: User's installed Ansible extension version, in format vMAJOR.MINOR.PATCH
          pattern: v?\d+\.\d+\.\d+
        content:
          type: string
          title: Playbook content
          description: The playbook that needs to be explained.
        explanationId:
          type: string
          format: uuid
          title: Explanation ID
          description: A UUID that identifies the particular explanation data is being
            requested for.
        metadata:
          $ref: '#/components/schemas/Metadata'
      required:
      - content
    ExplanationResponse:
      type: object
      properties:
        content:
          type: string
        format:
          type: string
        explanationId:
          type: string
          format: uuid
          title: Explanation ID
          description: A UUID that identifies the particular explanation data is being
            requested for.
      required:
      - content
      - format
    FeedbackRequest:
      type: object
      properties:
        ansibleExtensionVersion:
          type: string
          title: Ansible vscode/vscodium extension version
          description: User's installed Ansible extension version, in format vMAJOR.MINOR.PATCH
          pattern: v?\d+\.\d+\.\d+
        inlineSuggestion:
          $ref: '#/components/schemas/InlineSuggestionFeedback'
        issueFeedback:
          $ref: '#/components/schemas/IssueFeedback'
        metadata:
          $ref: '#/components/schemas/Metadata'
        model:
          type: string
        playbookExplanationFeedback:
          $ref: '#/components/schemas/PlaybookExplanationFeedback'
        playbookGenerationFeedback:
          $ref: '#/components/schemas/PlaybookGenerationFeedback'
        playbookGenerationAction:
          $ref: '#/components/schemas/PlaybookGenerationAction'
        sentimentFeedback:
          $ref: '#/components/schemas/SentimentFeedback'
        suggestionQualityFeedback:
          $ref: '#/components/schemas/SuggestionQualityFeedback'
    GenerationRequest:
      type: object
      properties:
        text:
          type: string
          title: Description content
          description: The description that needs to be converted to a playbook.
        generationId:
          type: string
          format: uuid
          title: generation ID
          description: A UUID that identifies the particular generation data is being
            requested for.
        createOutline:
          type: boolean
          default: false
          title: generate outline
          description: Indicates whether the answer should also include an outline
            of the Ansible Playbook.
        outline:
          type: string
          description: A long step by step outline of the expected Ansible Playbook.
        wizardId:
          type: string
          format: uuid
          title: wizard ID
          description: A UUID to track the succession of interaction from the user.
        metadata:
          $ref: '#/components/schemas/Metadata'
      required:
      - text
    GenerationResponse:
      type: object
      properties:
        playbook:
          type: string
        format:
          type: string
        generationId:
          type: string
          format: uuid
          title: Explanation ID
          description: A UUID that identifies the particular summary data is being
            requested for.
        outline:
          type: string
      required:
      - format
      - outline
      - playbook
    InlineSuggestionFeedback:
      type: object
      properties:
        userActionTime:
          type: number
          format: double
        documentUri:
          type: string
        action:
          $ref: '#/components/schemas/Action4c6Enum'
        error:
          type: string
        suggestionId:
          type: string
          format: uuid
          title: Suggestion ID
          description: A UUID that identifies a suggestion.
      required:
      - action
      - suggestionId
    IssueFeedback:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeEnum'
        title:
          type: string
          title: Issue title
          description: The title of the issue.
        description:
          type: string
          title: Issue description
          description: The description of the issue.
      required:
      - description
      - title
      - type
    MarkdownUserResponse:
      type: object
      properties:
        content:
          type: string
          readOnly: true
      required:
      - content
    Metadata:
      type: object
      properties:
        ansibleExtensionVersion:
          type: string
          title: Ansible vscode/vscodium extension version
          description: User's installed Ansible extension version, in format vMAJOR.MINOR.PATCH
          pattern: v?\d+\.\d+\.\d+
    Organization:
      type: object
      properties:
        id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        name:
          type: string
          readOnly: true
        has_api_key:
          type: boolean
          readOnly: true
        has_telemetry_opt_out:
          type: string
          readOnly: true
      required:
      - has_api_key
      - has_telemetry_opt_out
      - id
      - name
    Plan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 80
      required:
      - id
      - name
    PlaybookExplanationFeedback:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/Action4c6Enum'
        explanationId:
          type: string
          format: uuid
          title: Explanation ID
          description: A UUID that identifies the playbook explanation.
      required:
      - action
      - explanationId
    PlaybookGenerationAction:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/PlaybookGenerationActionActionEnum'
        wizardId:
          type: string
          format: uuid
          title: wizard ID
          description: A UUID that identifies the UI session.
        fromPage:
          type: integer
          title: page of origin
          description: A number that indicate the page of origin
        toPage:
          type: integer
          title: destination page
          description: A number that indicate the destination page
      required:
      - action
      - wizardId
    PlaybookGenerationActionActionEnum:
      enum:
      - '0'
      - '1'
      - '2'
      - '3'
      type: string
      description: |-
        * `0` - OPEN
        * `1` - CLOSE_CANCEL
        * `2` - TRANSITION
        * `3` - CLOSE_ACCEPT
    PlaybookGenerationFeedback:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/Action4c6Enum'
        wizardId:
          type: string
          format: uuid
          title: Outline ID
          description: A UUID that identifies the UI session.
      required:
      - action
      - wizardId
    SentimentFeedback:
      type: object
      properties:
        value:
          type: integer
          maximum: 5
          minimum: 1
        feedback:
          type: string
          title: Free form text feedback
          description: Free form text feedback describing the reason for sentiment
            value.
      required:
      - feedback
      - value
    SuggestionQualityFeedback:
      type: object
      properties:
        prompt:
          type: string
          title: File Content used as context
          description: File Content till end of task name description before cursor
            position.
        providedSuggestion:
          type: string
          title: Provided Model suggestion
          description: Inline suggestion from model as shared by user for given prompt.
        expectedSuggestion:
          type: string
          title: Expected Model suggestion
          description: Suggestion expected by the user.
        additionalComment:
          type: string
          title: Additional Comment
          description: Additional comment describing why the                    change
            was required in suggestion.
      required:
      - expectedSuggestion
      - prompt
      - providedSuggestion
    TelemetrySettingsRequest:
      type: object
      properties:
        optOut:
          type: boolean
          description: Indicates whether the Red Hat Organization opts out of telemetry
            collection.
      required:
      - optOut
    TypeEnum:
      enum:
      - bug-report
      - feature-request
      type: string
      description: |-
        * `bug-report` - Bug Report
        * `feature-request` - Feature Request
    UserPlan:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
        expired_at:
          type: string
          format: date-time
          nullable: true
        accept_marketing:
          type: boolean
        plan:
          $ref: '#/components/schemas/Plan'
      required:
      - created_at
      - plan
    UserResponse:
      type: object
      properties:
        email:
          type: string
        external_username:
          type: string
        family_name:
          type: string
        given_name:
          type: string
        org_telemetry_opt_out:
          type: boolean
        organization:
          $ref: '#/components/schemas/Organization'
        rh_org_has_subscription:
          type: boolean
          readOnly: true
        rh_user_has_seat:
          type: boolean
          readOnly: true
        rh_user_is_org_admin:
          type: boolean
        username:
          type: string
          maxLength: 150
        userplan_set:
          type: array
          items:
            $ref: '#/components/schemas/UserPlan'
      required:
      - rh_org_has_subscription
      - rh_user_has_seat
      - username
      - userplan_set
    WcaKeyRequest:
      type: object
      properties:
        key:
          type: string
          description: WCA API Key.
      required:
      - key
    WcaModelIdRequest:
      type: object
      properties:
        model_id:
          type: string
          description: WCA Model Id.
      required:
      - model_id
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    oauth2:
      type: oauth2
      flows: {}
tags:
- name: ai
  description: AI-related operations
- name: me
  description: Authenticated user information
- name: check
  description: Health check
- name: wca
  description: watsonx Code Assistant
